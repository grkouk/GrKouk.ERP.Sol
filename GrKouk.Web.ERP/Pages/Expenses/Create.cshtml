@page
@model GrKouk.Web.Erp.Pages.Expenses.CreateModel
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
        Layout = "_LayoutEntryFormTransaction";
        ViewData["Title"] = "Νέο Εξοδο";
}

<h4>Create Diary Transaction</h4>
<hr />
<div class="container">
    <form method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger small"></div>
        <input type="hidden" asp-for="@Model.CopyFromId" id="CopyFromId" />
        <div class="row mb-3">

            <div class="col-md-2">

                <div class="form-floating">
                     <input asp-for="ItemVm.TransactionDate" class="form-control form-control-sm" placeholder="Trans date"/>
                    <label asp-for="ItemVm.TransactionDate" class="small"></label>
                    <span asp-validation-for="ItemVm.TransactionDate" class="text-danger small"></span>
                </div>
            </div>
            <div class="col-md-4">

                <div class="form-floating">
                    <select asp-for="ItemVm.TransactorId" class="form-select form-select-sm" asp-items="ViewBag.TransactorId"></select>
                    <label asp-for="ItemVm.TransactorId" class="small"></label>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2">

                <div class="form-floating">
                    <input asp-for="ItemVm.ReferenceCode" class="form-control form-control-sm"/>
                    <label asp-for="ItemVm.ReferenceCode" class="small"></label>
                    <span asp-validation-for="ItemVm.ReferenceCode" class="text-danger small"></span>
                </div>
            </div>
            <div class="col-md-4">

                <div class="form-floating">
                    <select asp-for="ItemVm.FinTransCategoryId" class="form-select form-select-sm" asp-items="ViewBag.FinTransCategoryId"></select>
                    <label asp-for="ItemVm.FinTransCategoryId" class="small"></label>
                </div>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-2">
                <label class="small" id="test"></label>
                <label asp-for="ItemVm.CompanyId" class="small"></label>
                <select asp-for="ItemVm.CompanyId" class="form-select form-select-sm" asp-items="ViewBag.CompanyId"></select>
            </div>
            <div class="col-md-4">
                <label asp-for="ItemVm.CostCentreId" class="small"></label>
                <select asp-for="ItemVm.CostCentreId" class="form-select form-select-sm" asp-items="ViewBag.CostCentreId"></select>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-6">
                <label asp-for="ItemVm.Description" class="small"></label>
                <textarea asp-for="ItemVm.Description" class="form-control form-control-sm" placeholder="Description of Transaction"></textarea>
                <span asp-validation-for="ItemVm.Description" class="text-danger small"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-3">
                <label asp-for="ItemVm.AmountFpa" class="small"></label>
                <input asp-for="ItemVm.AmountFpa" class="form-control form-control-sm" />
                <span asp-validation-for="ItemVm.AmountFpa" class="text-danger small"></span>
            </div>
            <div class="col-md-3">
                <label asp-for="ItemVm.AmountNet" class="small"></label>
                <input asp-for="ItemVm.AmountNet" class="form-control form-control-sm" />
                <span asp-validation-for="ItemVm.AmountNet" class="text-danger small"></span>
            </div>
        </div>
        <div class="row mb-3">
            <div>
                <input type="submit" value="Create" class="btn btn-primary btn-sm" />
            </div>
        </div>
    </form>
</div>


<div>
    <a class="small" asp-page="Index">Back to List</a>
</div>

@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            console.log("Inside Document ready");

            var companyCurrencyListJs = @Html.Raw(Json.Serialize(ViewBag.CompanyCurrencyListJs));
            $('#ItemVm_CompanyId').change(() => {
                console.log("Value of select");
                console.log($('#ItemVm_CompanyId').val());
                console.log(companyCurrencyListJs);
                let companyId=$('#ItemVm_CompanyId').val();
                if (companyId) {
                    let obj = companyCurrencyListJs.find(o => o.companyId == companyId);
                    if (obj) {
                        console.log('Found element');
                        console.log(obj);
                        var txt = obj.currencyCode + " " + obj.displayLocale;

                        $('#test').text(txt);
                    } else {
                        $('#test').val('Not Found');
                    }
                    
                }
                
            });

            $('#ItemVm_TransactorId').change(() => {
                console.log("Value of select");
                console.log($('#ItemVm_TransactorId').val());
                var selectedTransactorId = $('#ItemVm_TransactorId').val();
                const Uri = '@Configuration.GetSection("WebApiSettings")["WebApiLocal"]';
                const FinalUri = `${Uri}/GrkoukInfoApi/LastDiaryTransactionData?transactorId=${selectedTransactorId}`;
                console.log(`Final Uri=${FinalUri}`);

                //const callParameters = {
                //    headers: { "Content-Type": "application/json;charset=UTF-8" },
                //    body: data,
                //    method: "GET"
                //};
                fetch(FinalUri )
                    .then(function (response) {
                        if (response.ok) {
                            return response.json();
                        }
                        else {
                            return "";
                        }

                    })
                    .then(function (myJson) {
                        if (myJson) {
                            console.log(JSON.stringify(myJson));
                            $('#ItemVm_CompanyId').val(myJson.companyId);
                            $('#ItemVm_FinTransCategoryId').val(myJson.categoryId);
                            $('#ItemVm_CostCentreId').val(myJson.costCentreId);
                        }

                    })
                    .catch(error => console.log(error));
            });
            var copyFromId =parseInt( $('#CopyFromId').val());

            if (copyFromId===0) {
              
                $('#ItemVm_AmountNet').val(0);
                $('#ItemVm_AmountFpa').val(0);    
            }
            $('#ItemVm_TransactionDate').val(new Date().toISOString().slice(0, 10));
        });
    </script>

}
